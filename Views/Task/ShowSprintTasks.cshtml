@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using System.ComponentModel.DataAnnotations;
@using System.Reflection;
@model Task

@{
    var tasks = (List<SprintTask>)ViewBag.tasks;
    var _sprintId = ViewBag.sprintId;
}
<h1>Sprint Tasks</h1>

<div class="container">
    <table class="table table-hover table-dark">
        <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Description</th>
                <th scope="col">Developer</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
                <th scope="col">Status</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var task in tasks)
            {
                <tr>
                    <td>@task.Title</td>
                    <td>@task.Description</td>
                    <td>@(task.Developer.FirstName + " " + task.Developer.LastName)</td>
                    <td>@task.StartDate</td>
                    <td>@task.EndDate</td>
                    @if (task.Status == HelperClass.Status.PendingApproval)
                    {
                        <td>
                            @(task.Status.GetType().GetMember(task.Status.ToString()).First().GetCustomAttribute<DisplayAttribute>().GetName())
                        </td>
                    }
                    else
                    {
                        <td>@task.Status</td>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        <td>
                            <a class="btn btn-info" href="/Work/ShowTaskWorks?taskId=@task.ID">Works</a>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("TeamLeader"))
                            {
                                <a class="btn btn-info" href="/Task/ShowEditTask?taskId=@task.ID">Edit</a>
                            }

                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>
    @if (User.Identity.IsAuthenticated && User.IsInRole("TeamLeader"))
    {
        <div>
            <a id="newTask" style="float:right" class="btn btn-primary" href="/Task/Create">New Task</a>
            @if (tasks.Count > 0)
            {
                <a class="btn btn-primary" style="float:left" href="/Sprint/ShowProjectSprints?projectId=@tasks[0].Sprint.ProjectID"> Go To Sprints </a>
            }
        </div>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="completeConfirmModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Status Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Grate! All this sprint tasks are completet<br />
                Are you want to set this sprint as complete?
            </div>
            <div class="modal-footer">
                <button id="confirm" type="button" onclick="return confirm('Are you sure?');" class="btn btn-secondary" data-dismiss="modal">Yes</button>
                <a type="button" href="/Task/Create" class="btn btn-primary">New Task</a>
            </div>
        </div>
    </div>
</div>


<script>
    $('document').ready(function () {
        $.ajax({
            url:'/Sprint/CheckSprintComplete',
            data: { sprintId:@_sprintId},
            contentType: "application/json",
            dataType: "json",
            success: function (data) {
                debugger
                if (data) {
                    $("#newTask").prop('hidden', true);
                }
                else {
                    $.ajax({
                        url: '/Task/CheckSprintTasksComplete',
                        data: { sprintId:@_sprintId},
                        contentType: "application/json",
                        dataType: "json",
                        success: function (data) {
                            debugger
                            if (data) {
                                $("#completeConfirmModal").modal('show');
                            }
                        },
                        error: function () {
                            alert("error3");
                        }
                    });
                }
            },
            error: function () {
                alert("error3");
            }
        });
        @*$.ajax({
            url: '/Task/CheckSprintTasksComplete',
            data: { sprintId:@_sprintId},
            contentType: "application/json",
            dataType: "json",
            success: function (data) {
                debugger
                if (data) {

                    $("#completeConfirmModal").modal('show');
                }
            },
            error: function () {
                alert("error3");
            }
        });*@

        $("#confirm").click(function () {
            $.ajax({
                url: '/Sprint/SetStatuseToComplete',
            data: { sprintId:@_sprintId},
            contentType: "application/json",
            dataType: "json",
            success: function (data) {
                debugger
                if (data) {
                    $("#newTask").prop('hidden', true);
                    alert('Your sprint completed successfully.Thanks for your efforts,It is really appreciated');
                    location.reload();
                }
            },
            error: function () {
                alert("error3");
            }
        });

        })
    });
</script>